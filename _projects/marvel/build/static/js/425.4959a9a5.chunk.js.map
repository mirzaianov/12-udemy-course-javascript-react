{"version":3,"file":"static/js/425.4959a9a5.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case 'waiting':\n      return <Spinner />;\n    case 'loading':\n      return newItemLoading ? <Component /> : <Spinner />;\n    case 'confirmed':\n      return <Component />;\n    case 'error':\n      return <ErrorMessage />;\n    default:\n      throw new Error('Unexpected process state');\n  }\n};\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { getAllComics, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setProcess('confirmed'));\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li\n          className='comics__item'\n          key={i}\n        >\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className='comics__item-img'\n            />\n            <div className='comics__item-name'>{item.title}</div>\n            <div className='comics__item-price'>{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className='comics__grid'>{items}</ul>;\n  }\n\n  return (\n    <div className='comics__list'>\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? 'none' : 'block' }}\n        className='button button__main button__long'\n        onClick={() => onRequest(offset)}\n      >\n        <div className='inner'>load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from 'react-helmet';\r\n\r\nimport ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta\r\n          name='description'\r\n          content='Page with list of our comics'\r\n        />\r\n        <title>Comics Page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"names":["setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","setnewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","_jsxs","className","children","arr","items","map","item","i","Link","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","display","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList"],"sourceRoot":""}