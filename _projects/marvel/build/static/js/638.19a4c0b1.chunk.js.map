{"version":3,"file":"static/js/638.19a4c0b1.chunk.js","mappings":"qLAiDA,UAtCmB,SAAHA,GAAiC,IAA3BC,EAASD,EAATC,UAAWC,EAAQF,EAARE,SACvBC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAoEC,EAAAA,EAAAA,KAA5DC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAUJ,EAAVI,WAAYC,EAAOL,EAAPK,QAASC,EAAUN,EAAVM,YAErDC,EAAAA,EAAAA,YAAU,WACRC,GAEF,GAAG,CAAChB,IAEJ,IAAMgB,EAAa,WAGjB,OAFAJ,IAEQb,GACN,IAAK,QACHW,EAASV,GACNiB,KAAKC,GACLD,MAAK,kBAAMH,EAAW,YAAY,IACrC,MACF,IAAK,YACHH,EAAaX,GACViB,KAAKC,GACLD,MAAK,kBAAMH,EAAW,YAAY,IAE3C,EAEMI,EAAe,SAACZ,GACpBC,EAAQD,EACV,EAEA,OACEa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,KACTC,EAAAA,EAAAA,GAAWX,EAASf,EAAWQ,KAGtC,C,wFC5BA,EAjBiB,WACb,OACIa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,eAAcJ,SAAC,kDAC5BF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,WAAUJ,SAAA,EACrBF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,yBAAwBJ,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4BACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6BAEnBH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAI/B,ECEA,EAfmB,SAACZ,EAASf,EAAWQ,GACtC,OAAQO,GACN,IAAK,UACH,OAAOS,EAAAA,EAAAA,KAACI,EAAQ,IAClB,IAAK,UACH,OAAOJ,EAAAA,EAAAA,KAACK,EAAAA,EAAO,IACjB,IAAK,YACH,OAAOL,EAAAA,EAAAA,KAACxB,EAAS,CAACQ,KAAMA,IAC1B,IAAK,QACH,OAAOgB,EAAAA,EAAAA,KAACM,EAAAA,EAAY,IACtB,QACE,MAAM,IAAIC,MAAM,4BAEtB,C","sources":["components/pages/SinglePage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport AppBanner from '../appBanner/AppBanner';\nimport setContent from '../../utils/setContent';\n\n// Хотелось бы вынести функцию по загрузке данных как отдельный аргумент\n// Но тогда мы потеряем связь со стэйтами загрузки и ошибки\n// А если вынесем их все в App.js - то они будут одни на все страницы\n\nconst SinglePage = ({ Component, dataType }) => {\n  const { id } = useParams();\n  const [data, setData] = useState(null);\n  const { getComic, getCharacter, clearError, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    updateData();\n    // eslint-disable-next-line\n  }, [id]);\n\n  const updateData = () => {\n    clearError();\n    // eslint-disable-next-line\n    switch (dataType) {\n      case 'comic':\n        getComic(id)\n          .then(onDataLoaded)\n          .then(() => setProcess('confirmed'));\n        break;\n      case 'character':\n        getCharacter(id)\n          .then(onDataLoaded)\n          .then(() => setProcess('confirmed'));\n    }\n  };\n\n  const onDataLoaded = (data) => {\n    setData(data);\n  };\n\n  return (\n    <>\n      <AppBanner />\n      {setContent(process, Component, data)}\n    </>\n  );\n};\n\nexport default SinglePage;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Skeleton />;\r\n    case 'loading':\r\n      return <Spinner />;\r\n    case 'confirmed':\r\n      return <Component data={data} />;\r\n    case 'error':\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error('Unexpected process state');\r\n  }\r\n};\r\n\r\nexport default setContent;\r\n"],"names":["_ref","Component","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","data","setData","_useMarvelService","useMarvelService","getComic","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","_jsxs","_Fragment","children","_jsx","AppBanner","setContent","className","Skeleton","Spinner","ErrorMessage","Error"],"sourceRoot":""}